version: '3'

services:
  user-frontend:
    container_name: user-frontend
    image: user-frontend
    build:
      context: ./user-frontend
      dockerfile: ${DOCKERFILE:-Dockerfile}
    ports:
      - 5000:5173
      - 4000:3000 
    depends_on:
      - backend
    volumes:
      - /app/node_modules/
      - ./user-frontend:/app

  admin-frontend:
    container_name: admin-frontend
    image: admin-frontend
    build:
      context: ./admin-frontend
      dockerfile: ${DOCKERFILE:-Dockerfile}
    ports:
      - 5100:5173
      - 4100:3000
    depends_on:
      - backend
    volumes:
      - /app/node_modules/
      - ./admin-frontend:/app

  backend:
    restart: on-failure
    container_name: backend
    image: backend
    build: 
      context: ./backend
      dockerfile: ${DOCKERFILE:-Dockerfile}
    environment:
      APP_NAME: '${APP_NAME:-cinematix}'
      TMDB_API_KEY: '${TMDB_API_KEY:-12345}'
      TMDB_API_BASE_URL: '${TMDB_API_BASE_URL:-https://api.themoviedb.org/3}'
      TMDB_API_IMAGE_BASE_URL: '${TMDB_API_IMAGE_BASE_URL:-https://image.tmdb.org/t/p}'
      POSTGRES_USER: '${POSTGRES_USER:-postgres}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-postgres}'
      POSTGRES_DB: '${POSTGRES_DB:-cinema}'
      POSTGRES_HOST: '${POSTGRES_HOST:-db}'
      SUPERADMIN_NAME: '${SUPERADMIN_NAME:-admin}'
      SUPERADMIN_EMAIL: '${SUPERADMIN_EMAIL:-admin@localhost}'
      SUPERADMIN_PASSWORD: '${SUPERADMIN_PASSWORD:-admin}'
      JWT_SIGNATURE_SECRET: '${JWT_SIGNATURE_SECRET:-12345}'
    ports:
      - 6000:4000
    depends_on:
      db:
        condition: service_healthy
    volumes:
        - ./backend:/app

  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-postgres}' 
      POSTGRES_DB: '${POSTGRES_DB:-cinema}'
      POSTGRES_USER: '${POSTGRES_USER:-postgres}'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - 'pgdata:/var/lib/postgresql/data'
volumes:
  pgdata:
    driver: local


